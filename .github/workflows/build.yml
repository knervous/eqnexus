name: Build

on:
  push:
    branches: [ "main" ]
    paths:
      - 'core/**'
      - 'proxy/**'

env:
  VERSION: 1.0.2
  BUILD_CONFIGURATION: Release
  SKIP_POST_BUILD: true

jobs:
  build:
    runs-on: windows-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
     
    - name: vcpkg build
      uses: johnwason/vcpkg-action@v6
      id: vcpkg
      with:
        triplet: x86-windows-static
        token: ${{ github.token }}
        github-binarycache: true

    - name: Define Environment Variables
      run: echo "SKIP_POST_BUILD=true" >> $Env:GITHUB_ENV

    - name: Integrate vcpkg with MSBuild
      shell: cmd
      run: |
        vcpkg\vcpkg.exe integrate install

    - name: Build Proxy
      shell: cmd
      run: |
        msbuild proxy/NexusProxy.vcxproj /p:Configuration=Release /p:Platform=x86 /p:EnableModules=true /p:UndefineConstants=DEV

    - name: Build Core
      shell: cmd
      run: |
        msbuild core/core.vcxproj /p:Configuration=Release /p:Platform=x86 /p:EnableModules=true /p:UndefineConstants=DEV

    - name: Cache Module Files
      uses: actions/cache@v3
      with:
        path: |
          NexusProxy/Release
          NexusCore/Release
        key: modules-${{ runner.os }}-${{ hashFiles('**/*.ixx') }}
        restore-keys: |
          modules-${{ runner.os }}-
    
    - name: Define VERSION
      run: echo "VERSION=${{ env.VERSION }}.${{ github.run_number }}" >> $Env:GITHUB_ENV

    - name: Run Build and Package Script
      shell: pwsh
      run: pwsh ./scripts/build-package.ps1 -Version ${{ env.VERSION }}

    # Create GitHub Release
    - name: Release
      uses: "marvinpinto/action-automatic-releases@latest"
      if: github.ref == 'refs/heads/main'
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ env.VERSION }}"
        prerelease: false
        title: "EQ Nexus v${{ env.VERSION }}"
        files: |
          eqnexus-${{ env.VERSION }}.zip
          version.json